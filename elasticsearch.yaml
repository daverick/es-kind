apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  labels:
    cluster.name: "elasticsearch"
  annotations:
    eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
spec:
  version: 8.14.3
  secureSettings:
  - secretName: minio
  monitoring:
    metrics:
      elasticsearchRefs:
      - name: monitoring-cluster
    logs:
      elasticsearchRefs:
      - name: monitoring-cluster
  auth:
    roles:
    - secretName: roles-secret
  nodeSets:
  - name: hot
    count: 2
    config:  &elastisearch-config #elasticsearch config
      node.roles: 
        - ingest
        - data_hot
        - data_content
      node.attr.zone: ${ZONE}
      cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
      xpack.ml.enabled: true
      node.store.allow_mmap: false
      xpack.monitoring.collection.enabled: true
      xpack.monitoring.elasticsearch.collection.enabled: false
      s3.client.my-minio.endpoint: minio-service.default.svc:9000
      s3.client.my-minio.protocol: http 
      s3.client.my-minio.path_style_access: true
    podTemplate:
      spec:
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          env: 
          - name: ZONE
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['topology.kubernetes.io/zone']
          resources:
            requests:
              memory: 2Gi
              cpu: 0.5
            limits:
              memory: 2Gi
              cpu: 2
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
                elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-es-hot
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/instance-type
                  operator: In
                  values:
                  - highio
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 500Mi
  - name: warm
    count: 2
    config:
      <<: *elastisearch-config #elasticsearch config
      node.roles: 
        - data_warm
        - ml
        - transform
        - remote_cluster_client
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    podTemplate:
      spec:
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: elasticsearch
            env:
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            resources:
              requests:
                memory: 2Gi
                cpu: 0.5
              limits:
                memory: 2Gi
                cpu: 2
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
                elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-es-warm
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/instance-type
                  operator: In
                  values:
                  - highstorage
  - name: cold
    count: 0
    config:  
      <<: *elastisearch-config #elasticsearch config
      node.roles: 
        - data_cold
      node.attr.temp: cold
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    podTemplate:
      spec:
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: elasticsearch
            env:
            - name: ES_JAVA_OPTS
              value: -Xms1g -Xmx1g
            resources:
              requests:
                memory: 2Gi
                cpu: 0.5
              limits:
                memory: 2Gi
                cpu: 2
        nodeSelector: 
          temp: warm
  - name: master
    count: 2
    config:  
      <<: *elastisearch-config #elasticsearch config
      node.roles: 
        - master
    podTemplate:
      spec:
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: elasticsearch
            env:
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            resources:
              requests:
                memory: 1Gi
                cpu: 0.5
              limits:
                memory: 1Gi
                cpu: 1
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
                elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-es-master
  - name: tie-breaker
    count: 1
    config:  
      <<: *elastisearch-config #elasticsearch config
      node.roles: 
        - master
        - voting_only
      node.attr.zone: null
    podTemplate:
      spec:
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: elasticsearch
            env:
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            resources:
              requests:
                memory: 1Gi
                cpu: 0.5
              limits:
                memory: 1Gi
                cpu: 1
                

---
apiVersion: v1
kind: Secret
metadata:
  name: minio
data:
  s3.client.my-minio.secret_key: TjAxR2Y4MTZ4REZmczc4NmU2UEg5bllLCg==
  s3.client.my-minio.access_key: bWluaW8K
